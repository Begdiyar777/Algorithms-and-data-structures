/* Set – коллекция для хранения множества значений, 
причём каждое значение может встречаться лишь один раз. 
Основные методы:

set.add(item) – добавляет в коллекцию item, возвращает set (чейнится).
set.delete(item) – удаляет item из коллекции, возвращает true, если он там был, иначе false.
set.has(item) – возвращает true, если item есть в коллекции, иначе false.
set.clear() – очищает set.

Также как у множеств есть методы difference(), union(), intersection() которые соответвенно
возвращают отличие, соединение и пересечение двух множеств. Но пока эти методы поддерживаются
не всеми браузерами.
*/

// создание сета

const set = new Set()
const set1 = new Set([1,2,3,4,1,2])

// Добавление элемента
set.add(1)
set.add(2)
set.add(3).add(4).add(1).add(2)

// Удаление элемента
set.delete(1) // веренет булевое значение

set.has(1) // веренет булевое значение 

set1.clear() // удаляет все элементы сета

// Перебор Set осуществляется через forEach или for..of аналогично Map:

let set2 = new Set(["апельсины", "яблоки", "бананы"]);

// то же, что: for(let value of set)
set2.forEach((value, valueAgain, set2) => { // value = valueAgain так сделано для совместимости с Мап
  console.log(value); // апельсины, затем яблоки, затем бананы
});













