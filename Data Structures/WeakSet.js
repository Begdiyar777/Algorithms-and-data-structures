/*WeakSet – особый вид Set, не препятствующий сборщику мусора удалять свои элементы. 
То есть, если некий объект присутствует только в WeakSet – он удаляется из памяти.
WeakSet работает только на запись (set, delete) и чтение (get, has) элементов по конкретному ключу
У WeakSet есть ряд ограничений:
    -Только объекты в качестве значений.
    -Нет свойства size.
    -Нельзя перебрать элементы итератором или forEach.
    -Нет метода clear().
Это нужно для тех ситуаций, когда основное место для хранения и использования объектов находится где-то 
в другом месте кода, а здесь мы хотим хранить для них «вспомогательные» данные, существующие лишь пока жив объект.
Таким образом, WeakSet избавляет нас от необходимости вручную удалять вспомогательные данные, когда удалён основной объект.*/

//==== Пример ====

let visitedSet = new WeakSet();

let john = { name: "John" };
let pete = { name: "Pete" };
let mary = { name: "Mary" };

visitedSet.add(john); // John заходил к нам
visitedSet.add(pete); // потом Pete
visitedSet.add(john); // John снова

// visitedSet сейчас содержит двух пользователей

// проверим, заходил ли John?
console.log(visitedSet.has(john)); // true

// проверим, заходила ли Mary?
console.log(visitedSet.has(mary)); // false

john = null;

// структура данных visitedSet будет очищена автоматически (объект john будет удалён из visitedSet)